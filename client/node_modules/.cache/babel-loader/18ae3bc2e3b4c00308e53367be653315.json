{"ast":null,"code":"var _jsxFileName = \"/Users/princeajuobi/Documents/fastsales/src/Components/collectionOverview/CollectionOverviewContainer.js\";\nimport { useSelector } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionLoading } from \"../../redux/shop/shopSelectors\";\nimport Spinner from \"../spinner/Spinner\";\nimport CollectionOverview from \"./CollectionOverview\";\n\nconst _useSelector = useSelector(createStructuredSelector({\n  isLoading: selectCollectionLoading\n})),\n      isLoading = _useSelector.isLoading;\n\nconst wraped = () => {\n  return React.createElement(CollectionOverview, {\n    isLoading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nconst CollectionOverviewContainer = compose(Spinner)(wraped);\nexport default CollectionOverviewContainer;","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/Components/collectionOverview/CollectionOverviewContainer.js"],"names":["useSelector","compose","createStructuredSelector","selectCollectionLoading","Spinner","CollectionOverview","isLoading","wraped","CollectionOverviewContainer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,uBAAT,QAAwC,gCAAxC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;qBAEsBL,WAAW,CAC/BE,wBAAwB,CAAC;AACvBI,EAAAA,SAAS,EAAEH;AADY,CAAD,CADO,C;MAAzBG,S,gBAAAA,S;;AAMR,MAAMC,MAAM,GAAG,MAAM;AACnB,SAAO,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAED,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAIA,MAAME,2BAA2B,GAAGP,OAAO,CAACG,OAAD,CAAP,CAAiBG,MAAjB,CAApC;AAEA,eAAeC,2BAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionLoading } from \"../../redux/shop/shopSelectors\";\nimport Spinner from \"../spinner/Spinner\";\nimport CollectionOverview from \"./CollectionOverview\";\n\nconst { isLoading } = useSelector(\n  createStructuredSelector({\n    isLoading: selectCollectionLoading\n  })\n);\n\nconst wraped = () => {\n  return <CollectionOverview isLoading={isLoading} />;\n};\n\nconst CollectionOverviewContainer = compose(Spinner)(wraped);\n\nexport default CollectionOverviewContainer;\n"]},"metadata":{},"sourceType":"module"}