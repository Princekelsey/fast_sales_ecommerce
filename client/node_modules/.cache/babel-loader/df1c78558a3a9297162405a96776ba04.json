{"ast":null,"code":"import _objectSpread from \"/Users/princeajuobi/Documents/fastsales/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport cartActionTypes from \"./cartActionTypes\";\nimport { addItemToCart, removeItemFromCart } from \"./utils\";\nconst inititailSate = {\n  isHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = inititailSate, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        isHidden: !state.isHidden\n      });\n\n    case cartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, payload)\n      });\n\n    case cartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, payload)\n      });\n\n    case cartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== payload.id)\n      });\n\n    case cartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/client/src/redux/cart/cartReducer.js"],"names":["cartActionTypes","addItemToCart","removeItemFromCart","inititailSate","isHidden","cartItems","cartReducer","state","type","payload","TOGGLE_CART_HIDDEN","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,SAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,IADU;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,KAA8C;AAChE,UAAQD,IAAR;AACE,SAAKR,eAAe,CAACU,kBAArB;AACE,+BACKH,KADL;AAEEH,QAAAA,QAAQ,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAIF,SAAKJ,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBI,OAAlB;AAF1B;;AAKF,SAAKT,eAAe,CAACY,WAArB;AACE,+BACKL,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBI,OAAlB;AAF/B;;AAKF,SAAKT,eAAe,CAACa,oBAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBP,OAAO,CAACO,EAD3B;AAFb;;AAOF,SAAKhB,eAAe,CAACiB,UAArB;AACE,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAKF;AACE,aAAOE,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from \"./cartActionTypes\";\nimport { addItemToCart, removeItemFromCart } from \"./utils\";\n\nconst inititailSate = {\n  isHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = inititailSate, { type, payload }) => {\n  switch (type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        isHidden: !state.isHidden\n      };\n    case cartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, payload)\n      };\n\n    case cartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, payload)\n      };\n\n    case cartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== payload.id\n        )\n      };\n\n    case cartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}