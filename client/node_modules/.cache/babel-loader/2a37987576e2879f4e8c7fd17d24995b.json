{"ast":null,"code":"var _jsxFileName = \"/Users/princeajuobi/Documents/fastsales/src/Components/cart/Cart.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { selectCartItems } from \"../../redux/cart/cartSelectors\";\nimport CustomButton from \"../customButton/CustomButton\";\nimport CartItem from \"../cartItem/CartItem\";\nimport { toggleCartHidden } from \"../../redux/cart/cartActions\";\nimport \"./cart.style.scss\";\n\nconst Cart = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const state = useSelector(createStructuredSelector({\n    cartItems: selectCartItems\n  }));\n\n  const toggleCart = () => dispatch(toggleCartHidden());\n\n  const cartItems = state.cartItems;\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Your cart is empty\")), React.createElement(CustomButton, {\n    onClick: (() => history.push(\"/checkout\"), toggleCart),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" \", \"Go to Checkout\"));\n};\n\nexport default withRouter(Cart);","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/Components/cart/Cart.js"],"names":["React","useSelector","useDispatch","createStructuredSelector","withRouter","selectCartItems","CustomButton","CartItem","toggleCartHidden","Cart","history","dispatch","state","cartItems","toggleCart","length","map","cartItem","id","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAO,mBAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC5B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGX,WAAW,CACvBE,wBAAwB,CAAC;AACvBU,IAAAA,SAAS,EAAER;AADY,GAAD,CADD,CAAzB;;AAMA,QAAMS,UAAU,GAAG,MAAMH,QAAQ,CAACH,gBAAgB,EAAjB,CAAjC;;AAR4B,QAUpBK,SAVoB,GAUND,KAVM,CAUpBC,SAVoB;AAY5B,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAACE,MAAV,GACCF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,CADF,EAUE,oBAAC,YAAD;AAAc,IAAA,OAAO,GAAG,MAAMP,OAAO,CAACS,IAAR,CAAa,WAAb,CAAN,EAAiCL,UAApC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,mBAVF,CADF;AAiBD,CA7BD;;AA+BA,eAAeV,UAAU,CAACK,IAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { selectCartItems } from \"../../redux/cart/cartSelectors\";\nimport CustomButton from \"../customButton/CustomButton\";\nimport CartItem from \"../cartItem/CartItem\";\nimport { toggleCartHidden } from \"../../redux/cart/cartActions\";\nimport \"./cart.style.scss\";\n\nconst Cart = ({ history }) => {\n  const dispatch = useDispatch();\n  const state = useSelector(\n    createStructuredSelector({\n      cartItems: selectCartItems\n    })\n  );\n\n  const toggleCart = () => dispatch(toggleCartHidden());\n\n  const { cartItems } = state;\n\n  return (\n    <div className=\"cart-dropdown\">\n      <div className=\"cart-items\">\n        {cartItems.length ? (\n          cartItems.map(cartItem => (\n            <CartItem key={cartItem.id} item={cartItem} />\n          ))\n        ) : (\n          <span className=\"empty-message\">Your cart is empty</span>\n        )}\n      </div>\n      <CustomButton onClick={(() => history.push(\"/checkout\"), toggleCart)}>\n        {\" \"}\n        Go to Checkout\n      </CustomButton>\n    </div>\n  );\n};\n\nexport default withRouter(Cart);\n"]},"metadata":{},"sourceType":"module"}