{"ast":null,"code":"import _defineProperty from \"/Users/princeajuobi/Documents/fastsales/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOGGLE_CART_HIDDEN } from \"./cartActionTypes\";\nconst inititailSate = {\n  isHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = inititailSate, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        isHidden: !state.isHidden\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/redux/cart/cartReducer.js"],"names":["TOGGLE_CART_HIDDEN","inititailSate","isHidden","cartItems","cartReducer","state","type","payload"],"mappings":";;;;;;AAAA,SAASA,kBAAT,QAAmC,mBAAnC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,IADU;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,KAA8C;AAChE,UAAQD,IAAR;AACE,SAAKN,kBAAL;AACE,+BACKK,KADL;AAEEH,QAAAA,QAAQ,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAKF;AACE,aAAOG,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["import { TOGGLE_CART_HIDDEN } from \"./cartActionTypes\";\n\nconst inititailSate = {\n  isHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = inititailSate, { type, payload }) => {\n  switch (type) {\n    case TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        isHidden: !state.isHidden\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}