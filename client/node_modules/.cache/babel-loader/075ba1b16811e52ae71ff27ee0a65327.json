{"ast":null,"code":"import _objectSpread from \"/Users/princeajuobi/Documents/fastsales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionsTypes from \"./userActionTypes\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailed, signInSuccess, signOutFailed, signOutSuccess, signUpSuccess, signUpFailed } from \"./userActions\";\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* signWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signWithGoogle);\n}\nexport function* signWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onEmailSignStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailed(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionsTypes.SIGN_OUT_START, signOutUser);\n}\nexport function* signUpNewUser({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailed(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionsTypes.SIGN_UP_START, signUpNewUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","userActionsTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailed","signInSuccess","signOutFailed","signOutSuccess","signUpSuccess","signUpFailed","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOutUser","signOut","onSignOutStart","SIGN_OUT_START","signUpNewUser","displayName","createUserWithEmailAndPassword","additionalData","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionsTypes from \"./userActionTypes\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailed,\n  signInSuccess,\n  signOutFailed,\n  signOutSuccess,\n  signUpSuccess,\n  signUpFailed\n} from \"./userActions\";\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* signWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signWithGoogle);\n}\n\nexport function* signWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* onEmailSignStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailed(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActionsTypes.SIGN_OUT_START, signOutUser);\n}\n\nexport function* signUpNewUser({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailed(error));\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(userActionsTypes.SIGN_UP_START, signUpNewUser);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}