{"ast":null,"code":"import _objectSpread from \"/Users/princeajuobi/Documents/fastsales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionsTypes from \"./userActionTypes\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInFailed, signInSuccess } from \"./userActions\";\nexport function* signWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, user)));\n  } catch (error) {\n    yield put(googleSignInFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signWithGoogle);\n}\nexport function* signWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, user)));\n  } catch (error) {\n    yield put(emailSignInFailed(error));\n  }\n}\nexport function* onEmailSignStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignStart)]);\n}","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","userActionsTypes","auth","googleProvider","createUserProfileDocument","signInFailed","signInSuccess","signWithGoogle","signInWithPopup","user","userRef","userSnapShot","get","googleSignInSuccess","id","error","googleSignInFailed","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailed","onEmailSignStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,OAAO,UAAUC,cAAV,GAA2B;AAChC,MAAI;AAAA,iBACe,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CADrB;AAAA,UACMM,IADN,QACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACe,mBAAmB;AAAGC,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAApB,OAA2BL,IAA3B,EAApB,CAAT;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACkB,kBAAkB,CAACD,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUE,mBAAV,GAAgC;AACrC,QAAMpB,UAAU,CAACI,gBAAgB,CAACiB,oBAAlB,EAAwCX,cAAxC,CAAhB;AACD;AAED,OAAO,UAAUY,aAAV,CAAwB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAxB,EAA0D;AAC/D,MAAI;AAAA,kBACe,MAAMpB,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMb,IADN,SACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAAC0B,kBAAkB;AAAGV,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAApB,OAA2BL,IAA3B,EAAnB,CAAT;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAAC2B,iBAAiB,CAACV,KAAD,CAAlB,CAAT;AACD;AACF;AAED,OAAO,UAAUW,gBAAV,GAA6B;AAClC,QAAM7B,UAAU,CAACI,gBAAgB,CAAC0B,mBAAlB,EAAuCR,aAAvC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACiB,mBAAD,CAAL,EAA4BjB,IAAI,CAAC0B,gBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionsTypes from \"./userActionTypes\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument\n} from \"../../firebase/firebase.utils\";\nimport { signInFailed, signInSuccess } from \"./userActions\";\n\nexport function* signWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess({ id: userSnapShot.id, ...user }));\n  } catch (error) {\n    yield put(googleSignInFailed(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signWithGoogle);\n}\n\nexport function* signWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess({ id: userSnapShot.id, ...user }));\n  } catch (error) {\n    yield put(emailSignInFailed(error));\n  }\n}\n\nexport function* onEmailSignStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}