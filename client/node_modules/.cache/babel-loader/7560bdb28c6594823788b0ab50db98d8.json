{"ast":null,"code":"import _slicedToArray from \"/Users/princeajuobi/Documents/fastsales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/princeajuobi/Documents/fastsales/src/Pages/shop/Shop.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionLoading } from \"../../redux/shop/shopSelectors\";\nimport CollectionOverview from \"../../Components/collectionOverview/CollectionOverview\";\nimport Collection from \"../collection/Collection\";\nimport { firestore, convertColectionSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchShopCollectionsCall } from \"../../redux/shop/shopActions\";\nimport Spinner from \"../../Components/spinner/Spinner\";\nconst CollectionsOverviewWithSpinner = Spinner(CollectionOverview);\nconst CollectionPageWithSpinner = Spinner(Collection);\n\nconst Shop = ({\n  match\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const updateCollection = collectionsMap => dispatch(updateShopCollections(collectionsMap));\n\n  useEffect(() => {\n    // let unsubscribeFromAuth = null;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertColectionSnapShotToMap(snapshot);\n      updateCollection(collectionMap);\n      setLoading(false);\n    }); // return () => {\n    //   unsubscribeFromAuth();\n    // };\n    // eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/Pages/shop/Shop.js"],"names":["React","useEffect","useState","Route","useDispatch","useSelector","createStructuredSelector","selectCollectionLoading","CollectionOverview","Collection","firestore","convertColectionSnapShotToMap","fetchShopCollectionsCall","Spinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Shop","match","isLoading","setLoading","dispatch","updateCollection","collectionsMap","updateShopCollections","collectionRef","collection","get","then","snapshot","collectionMap","path","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,uBAAT,QAAwC,gCAAxC;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,SADF,EAEEC,6BAFF,QAGO,+BAHP;AAIA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,MAAMC,8BAA8B,GAAGD,OAAO,CAACL,kBAAD,CAA9C;AACA,MAAMO,yBAAyB,GAAGF,OAAO,CAACJ,UAAD,CAAzC;;AAEA,MAAMO,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACMf,QAAQ,CAAC,IAAD,CADd;AAAA;AAAA,QACnBgB,SADmB;AAAA,QACRC,UADQ;;AAE1B,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,gBAAgB,GAAGC,cAAc,IACrCF,QAAQ,CAACG,qBAAqB,CAACD,cAAD,CAAtB,CADV;;AAGArB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMuB,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,aAAa,GAAGlB,6BAA6B,CAACiB,QAAD,CAAnD;AACAP,MAAAA,gBAAgB,CAACQ,aAAD,CAAhB;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD,EAHc,CAQd;AACA;AACA;AACA;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACa,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAEb;AAA3C,OAA0Da,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEd,KAAK,CAACa,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEb;AAAtC,OAAqDa,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CArCD;;AAuCA,eAAef,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionLoading } from \"../../redux/shop/shopSelectors\";\nimport CollectionOverview from \"../../Components/collectionOverview/CollectionOverview\";\nimport Collection from \"../collection/Collection\";\nimport {\n  firestore,\n  convertColectionSnapShotToMap\n} from \"../../firebase/firebase.utils\";\nimport { fetchShopCollectionsCall } from \"../../redux/shop/shopActions\";\nimport Spinner from \"../../Components/spinner/Spinner\";\n\nconst CollectionsOverviewWithSpinner = Spinner(CollectionOverview);\nconst CollectionPageWithSpinner = Spinner(Collection);\n\nconst Shop = ({ match }) => {\n  const [isLoading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  const updateCollection = collectionsMap =>\n    dispatch(updateShopCollections(collectionsMap));\n\n  useEffect(() => {\n    // let unsubscribeFromAuth = null;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertColectionSnapShotToMap(snapshot);\n      updateCollection(collectionMap);\n      setLoading(false);\n    });\n    // return () => {\n    //   unsubscribeFromAuth();\n    // };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        render={props => (\n          <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={props => (\n          <CollectionPageWithSpinner isLoading={isLoading} {...props} />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}