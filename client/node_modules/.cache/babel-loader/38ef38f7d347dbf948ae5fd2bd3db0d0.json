{"ast":null,"code":"import _defineProperty from \"/Users/princeajuobi/Documents/fastsales/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existingItem) {\n    return carItems.map(cartItem => cartItem.id === itemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cardItem);\n  }\n\n  return [...cartItems, {\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/redux/cart/utils.js"],"names":["addItemToCart","cartItems","itemToAdd","existingItem","find","cartItem","id","carItems","map","quantity","cardItem"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAArD,CAArB;;AAEA,MAAIH,YAAJ,EAAkB;AAChB,WAAOI,QAAQ,CAACC,GAAT,CAAaH,QAAQ,IAC1BA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,qBAESD,QAFT;AAGMI,MAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QAAT,GAAoB;AAHpC,SAKIC,QANC,CAAP;AAQD;;AAED,SAAO,CAAC,GAAGT,SAAJ,EAAe;AAAEQ,IAAAA,QAAQ,EAAE;AAAZ,GAAf,CAAP;AACD,CAfM","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existingItem) {\n    return carItems.map(cartItem =>\n      cartItem.id === itemToAdd.id\n        ? {\n            ...cartItem,\n            quantity: cartItem.quantity + 1\n          }\n        : cardItem\n    );\n  }\n\n  return [...cartItems, { quantity: 1 }];\n};\n"]},"metadata":{},"sourceType":"module"}