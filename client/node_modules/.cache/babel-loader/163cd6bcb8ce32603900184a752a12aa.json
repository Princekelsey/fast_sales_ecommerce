{"ast":null,"code":"import _objectSpread from \"/Users/princeajuobi/Documents/fastsales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionsTypes from \"./userActionTypes\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailed, signInSuccess, signOutFailed, signOutSuccess } from \"./userActions\";\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* signWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signWithGoogle);\n}\nexport function* signWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onEmailSignStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUser() {\n  try {} catch (error) {}\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionsTypes.SIGN_OUT_START, signOutUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["/Users/princeajuobi/Documents/fastsales/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","userActionsTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailed","signInSuccess","signOutFailed","signOutSuccess","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOutUser","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionsTypes from \"./userActionTypes\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailed,\n  signInSuccess,\n  signOutFailed,\n  signOutSuccess\n} from \"./userActions\";\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* signWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionsTypes.GOOGLE_SIGN_IN_START, signWithGoogle);\n}\n\nexport function* signWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* onEmailSignStart() {\n  yield takeLatest(userActionsTypes.EMAIL_SIGN_IN_START, signWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionsTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOutUser() {\n  try {\n  } catch (error) {}\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActionsTypes.SIGN_OUT_START, signOutUser);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignStart),\n    call(onCheckUserSession)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}